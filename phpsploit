#!/usr/bin/python2
#-*- coding: iso-8859-15 -*-

from os.path import abspath, dirname, join as joinpath
import sys

# adding ./core in python modules path list:
scriptDir  = abspath(dirname(sys.argv[0]))
pythonPath = joinpath(scriptDir, './core')
sys.path.append(pythonPath)

# now, local libs can be imported
from functions import *

CNF = dict()
CNF['PSVERSION'] = '2.1.3'
CNF['PSCOREVER'] = 2


# load the settings as CNF['SET']
from usr import settings
CNF['SET'] = settings.load()
if not settings.comply(CNF['SET']):
    configFile = settings.get_file().name
    sys.exit( P_inf+"Please edit your configuration file at "+configFile )


def is_target(arg):
    from re import findall
    urlCheck = '^https?://(.+?)(?:$|/)'
    try: domain = findall(urlCheck, arg)[0]
    except: domain = ''
    if domain and len(arg) > 13:
        return(True)
    return(False)


# arg_error implies invalid arguments
arg_error = True

if len(sys.argv) == 1:
    arg_error = False

elif len(sys.argv) == 2:
    arg = sys.argv[1]

    if arg in ['-h', '--help']:
        msg = getpath('framework/misc/help.msg').read()
        print( P_NL+msg.strip()+P_NL )
        sys.exit(0)

    elif arg in ['-v', '--version']:
        msg = "phpsploit version %s"
        print( msg %CNF['PSVERSION'] )
        sys.exit(0)

    elif is_target(arg):
        CNF['SET']['TARGET'] = arg

    else:
        # try to load argument as session
        from usr.session import load
        session = load(arg, CNF['PSCOREVER'])
        if session.error:
            sys.exit(session.error)

        new = session.content
        # update dict() objects only from new session
        for dic in CNF:
            try: self.CNF[dic].update(new[dic])
            except: pass
        CNF['SET']['SAVEFILE'] = os.path.abspath(arg)


        CNF = session.content
        CNF['SET'].update(CNF['SET'])
        CNF['SET']['SAVEFILE'] = abspath(arg)
        arg_error = False


# the TARGET setting must exist anyway
if not 'TARGET' in CNF['SET']:
    CNF['SET']['TARGET'] = 'None'

if CNF['SET']['TARGET'] != 'None':
    arg_error = False

if arg_error:
    sys.exit('Usage: phpsploit --help')


# start the main shell interface
from interface import mainshell
interface = mainshell.Start()
interface.CNF = CNF
interface.cmdloop()

# print an useless message before leaving
endMessage = getpath('framework/misc/messages.lst').randline()
print( P_NL+color(37)+endMessage.strip()+color(0)+P_NL )
