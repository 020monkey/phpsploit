#!/usr/bin/python2
#-*- coding: iso-8859-15 -*-

softVer = '2.0 Alpha1'
coreVer = 2


from os.path import abspath, dirname, join as joinpath
import sys
sys.argc = len(sys.argv)

# Adding ./core in python modules path list:
scriptDir  = abspath(dirname(sys.argv[0]))
pythonPath = joinpath(scriptDir, './core')
sys.path.append(pythonPath)

# now, we can import local libs :)
from functions import *

CNF = dict()
CNF['PSCOREVER'] = coreVer

# load user settings
from usr import settings
SET = settings.load()
if not settings.comply(SET):
    err = "Please edit your configuration file at %s"
    configFile = settings.get_file().name
    sys.exit(P_inf+err % configFile)


def is_target(arg):
    from re import findall
    urlCheck = '^https?://(.+?)(?:$|/)'
    try: domain = findall(urlCheck, arg)[0]
    except: domain = ''
    if domain and len(arg)>13:
        return(True)
    return(False)


def get_session(arg):
    from usr.session import load
    session = load(arg)
    return(session)


def is_incompatible(session):
    core = session.content
    try: version = int(core['PSCOREVER'])
    except: version = 0
    if version == coreVer:
        return(False)
    return(True)


# defaultly consider arguments as invalid
arg_error = True

if sys.argc == 1:
    arg_error = False

elif sys.argc == 2:
    arg = sys.argv[1]

    if arg in ['-h', '--help']:
        msg = getpath('misc/txt/help.msg').read()
        sys.exit(P_NL+msg.strip()+P_NL)

    elif arg in ['-v', '--version']:
        msg = "phpsploit version %s"
        sys.exit(msg % softVer)

    elif is_target(arg):
        SET['TARGET'] = arg

    else:
        # try to load argument as session
        session = get_session(arg)
        if is_incompatible(session):
            err = "Session not compatible with phpsploit %s"
            sys.exit(P_inf+err % softVer)
        CNF = session.content
        SET = settings.merge(SET, CNF['SET'])
        SET['SAVEFILE'] = abspath(arg)
        arg_error = False


# force TARGET to be an existing setting
if not 'TARGET' in SET:
    SET['TARGET'] = 'None'

if SET['TARGET'] != 'None':
    arg_error = False


if arg_error:
    sys.exit('Usage: phpsploit --help')


######################################
### now we can open the main interface

import mainShell

interface = mainShell.Start() # instantiate a shell interface
CNF['SET'] = SET              # move settings into the core
interface.setConfig(CNF)      # send config to the shell interface

interface.cmdloop()           # open the shell interface


# then we can leave with a random end message
endMessage = getpath('misc/txt/end_messages.lst').randline()
print P_NL+color(37)+endMessage.strip()+color(0)+P_NL
